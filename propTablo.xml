<PropConfig>
	<!--
	This file is a prop configuration template for the Prop Config utility
	described on the MAS wiki at https://github.com/MOARdV/AvionicsSystems/wiki/Prop-Config

	The tool and this XML file are used to quickly generate multiple props
	without the tedious effort of copying config files and making small edits
	while hoping you didn't overlook something.

	Copyright (c) 2020 MOARdV

	This file is licensed by MOARdV under the Creative Commons Attribution-Share Alike
	4.0 International license (CC BY-SA) https://creativecommons.org/licenses/by-sa/4.0/
	-->
	<TabloIndicator folder="TabloIndicator">
		<style name="PassiveAlarm">
		<!-- Alarm used for the Fake Alarms - does not apply UV shift to the panel -->
			<MODEL>
				<model>ASET/ASET_Props/Instruments/TabloIndicator/TabloIndicator</model>
			</MODEL>
			<TEXT_LABEL>
				<name>Caption</name>
				<transform>TextObj</transform>
				<fontSize>4.2</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<activeColor>255,190,150,255</activeColor>
				<passiveColor>145,80,80,255</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Panel Color</name>
				<transform>TabloColorPlate</transform>
				<activeColor>255,180,180,255</activeColor>
				<passiveColor>0,0,0,255</passiveColor>
			</COLOR_SHIFT>
		</style>
		<style name="Alarm">
		<!-- Alarm used for the alarms in TabloIndicator/Alarms - applies a UV shift to the panel -->
			<MODEL>
				<model>ASET/ASET_Props/Instruments/TabloIndicator/TabloIndicator</model>
			</MODEL>
			<TEXT_LABEL>
				<name>Caption</name>
				<transform>TextObj</transform>
				<fontSize>4.2</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<activeColor>255,190,150,255</activeColor>
				<passiveColor>145,80,80,255</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Panel Color</name>
				<transform>TabloColorPlate</transform>
				<activeColor>255,180,180,255</activeColor>
				<passiveColor>0,0,0,255</passiveColor>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<name>Panel Color</name>
				<transform>TabloColorPlate</transform>
				<startUV>0, 0</startUV>
				<endUV>0, 0.2</endUV>
				<variable>0</variable>
				<layers>_MainTex _Emissive</layers>
			</TEXTURE_SHIFT>
		</style>
		<style name="PassiveStatus">
			<!-- Green status tablo, does not change the texture when activating -->
			<MODEL>
				<model>ASET/ASET_Props/Instruments/TabloIndicator/TabloIndicator</model>
			</MODEL>
			<TEXT_LABEL>
				<name>Caption</name>
				<transform>TextObj</transform>
				<fontSize>4.2</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<activeColor>150,255,100,255</activeColor>
				<passiveColor>80,175,80,255</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Panel Color</name>
				<transform>TabloColorPlate</transform>
				<activeColor>255,255,255,255</activeColor>
				<passiveColor>0,0,0,255</passiveColor>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<name>Panel Color</name>
				<transform>TabloColorPlate</transform>
				<startUV>0.5, 0</startUV>
				<layers>_MainTex _Emissive</layers>
			</TEXTURE_SHIFT>
		</style>
		<style name="Status">
			<!-- Green status tablo, changes the texture when activating -->
			<MODEL>
				<model>ASET/ASET_Props/Instruments/TabloIndicator/TabloIndicator</model>
			</MODEL>
			<TEXT_LABEL>
				<name>Caption</name>
				<transform>TextObj</transform>
				<fontSize>4.2</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<activeColor>150,255,100,255</activeColor>
				<passiveColor>80,175,80,255</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Panel Color</name>
				<transform>TabloColorPlate</transform>
				<activeColor>255,255,255,255</activeColor>
				<passiveColor>0,0,0,255</passiveColor>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<name>Panel Color</name>
				<transform>TabloColorPlate</transform>
				<startUV>0.5, 0</startUV>
				<endUV>0.5, 0.2</endUV>
				<layers>_MainTex _Emissive</layers>
			</TEXTURE_SHIFT>
		</style>
		<style name="Other">
			<!-- A black status tablo? -->
			<MODEL>
				<model>ASET/ASET_Props/Instruments/TabloIndicator/TabloIndicator</model>
			</MODEL>
			<TEXT_LABEL>
				<name>Caption</name>
				<transform>TextObj</transform>
				<fontSize>5.6</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<activeColor>255,255,30,255</activeColor>
				<passiveColor>40,40,10,255</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Panel Color</name>
				<transform>TabloColorPlate</transform>
				<passiveColor>0,0,0,255</passiveColor>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<name>Panel Color</name>
				<transform>TabloColorPlate</transform>
				<startUV>0.0, 0.4</startUV>
				<layers>_MainTex _Emissive</layers>
			</TEXTURE_SHIFT>
		</style>
		<prop>
			<name>MAS_Tablo_Alarm_GPWS</name>
			<style>Alarm</style>
			<TEXT_LABEL delete="true"/>
			<COLOR_SHIFT>
				<comment>This prop implements all of the GPWS functionality.</comment>
				<variable>fc.Conditioned(0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT delete="true"/>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_Ablation</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>ABLATION</text>
				<variable>fc.Conditioned(fc.ResourceDelta("Ablator") &gt; 0.1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.ResourceDelta("Ablator") &gt; 0.1)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.ResourceDelta("Ablator") &gt; 0.1)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_AeroBraking</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>AIR$$$BRAKING</text>
				<variable>fc.Conditioned(fc.DynamicPressure() &gt; 0.01)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.DynamicPressure() &gt; 0.01)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.DynamicPressure() &gt; 0.01)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_AVAS_OFF</name>
			<style>Alarm</style>
			<AUDIO_PLAYER>
				<name>Alarm</name>
				<sound>ASET/ASET_Props/Sounds/AlarmBeep02</sound>
				<volume>1</volume>
				<trigger>ON</trigger>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("AVAS_ON") == 0)</variable>
			</AUDIO_PLAYER>
			<TEXT_LABEL>
				<text>OFF</text>
				<fontSize>6.5</fontSize>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("AVAS_ON") == 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("AVAS_ON") == 0)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_DockingAngle</name>
			<style>Alarm</style>
			<TRIGGER_EVENT>
				<name>trigger</name>
				<event>fc.SetPersistent("ALCOR_DOCKINGANGLEALARM_ON", 1)</event>
				<exitEvent>fc.SetPersistent("ALCOR_DOCKINGANGLEALARM_ON", 0)</exitEvent>
				<variable>fc.Conditioned(fc.TargetDistance() &lt; 10 and (fc.PitchTarget() &gt; 1.5 or fc.YawTarget() &gt; 1.5))</variable>
			</TRIGGER_EVENT>
			<TEXT_LABEL>
				<text>ANGLE</text>
				<fontSize>5</fontSize>
				<variable>fc.Conditioned(fc.TargetDistance() &lt; 10 and (fc.PitchTarget() &gt; 1.5 or fc.YawTarget() &gt; 1.5))</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.TargetDistance() &lt; 10 and (fc.PitchTarget() &gt; 1.5 or fc.YawTarget() &gt; 1.5))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.6</endUV>
				<variable>fc.Conditioned(fc.TargetDistance() &lt; 10 and (fc.PitchTarget() &gt; 1.5 or fc.YawTarget() &gt; 1.5))</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_DockingSpeed</name>
			<style>Alarm</style>
			<TRIGGER_EVENT>
				<name>trigger</name>
				<event>fc.SetPersistent("ALCOR_DOCKINGSPEEDALARM_ON", 1)</event>
				<exitEvent>fc.SetPersistent("ALCOR_DOCKINGSPEEDALARM_ON", 0)</exitEvent>
				<variable>fc.Conditioned(fc.TargetDistance() &lt; 10 and fc.TargetSpeed() &gt; 2.5)</variable>
			</TRIGGER_EVENT>
			<TEXT_LABEL>
				<text>SPEED</text>
				<fontSize>5</fontSize>
				<variable>fc.Conditioned(fc.TargetDistance() &lt; 10 and fc.TargetSpeed() &gt; 2.5)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.TargetDistance() &lt; 10 and fc.TargetSpeed() &gt; 2.5)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.6</endUV>
				<variable>fc.Conditioned(fc.TargetDistance() &lt; 10 and fc.TargetSpeed() &gt; 2.5)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_ERS_MasterAlarm</name>
			<comment>I can't find CUSTOM_ERS_MASTER_ALARM listed in the ASET directories</comment>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>MASTER$$$ALARM</text>
				<fontSize>5</fontSize>
				<variable>fc.Conditioned(0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<startUV>0, 0.4</startUV>
				<endUV>0.5, 0.4</endUV>
				<variable>fc.Conditioned(0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_HighG</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>HIGH G</text>
				<variable>fc.Conditioned(fc.GForce() &gt; 3)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GForce() &gt; 3)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.GForce() &gt; 3)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_HighQ</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>HIGH Q</text>
				<variable>fc.Conditioned(fc.DynamicPressure() &gt; 40)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.DynamicPressure() &gt; 40)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.DynamicPressure() &gt; 40)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_GearBroken</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>LANDING$$$GEAR BROKEN</text>
				<variable>fc.Conditioned(fc.GearBrokenCount())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GearBrokenCount())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.6</endUV>
				<variable>fc.Conditioned(fc.GearBrokenCount())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_Brakes</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>BRAKES</text>
				<variable>fc.Conditioned(fc.GetBrakes())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetBrakes())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.GetBrakes())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_EngineFailure</name>
			<style>Alarm</style>
			<TRIGGER_EVENT>
				<name>trigger</name>
				<event>fc.SetPersistent("ALCOR_ENGFAILURE_ON", 1)</event>
				<exitEvent>fc.SetPersistent("ALCOR_ENGFAILURE_ON", 0)</exitEvent>
				<variable>fc.Conditioned(fc.EngineFlameout())</variable>
			</TRIGGER_EVENT>
			<TEXT_LABEL>
				<text>ENGINE$$$FLAME OUT</text>
				<variable>fc.Conditioned(fc.EngineFlameout())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.EngineFlameout())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.EngineFlameout())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_EngineOverheat</name>
			<style>Alarm</style>
			<TRIGGER_EVENT>
				<name>trigger</name>
				<event>fc.SetPersistent("ALCOR_ENGINEOVERHEATALARM_ON", 1)</event>
				<exitEvent>fc.SetPersistent("ALCOR_ENGINEOVERHEATALARM_ON", 0)</exitEvent>
				<variable>fc.Conditioned(fc.HottestEngineTemperature(true) &gt; 0.85 * fc.HottestEngineMaxTemperature(true))</variable>
			</TRIGGER_EVENT>
			<TEXT_LABEL>
				<text>ENGINE$$$OVERHEAT</text>
				<variable>fc.Conditioned(fc.HottestEngineTemperature(true) &gt; 0.85 * fc.HottestEngineMaxTemperature(true))</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.HottestEngineTemperature(true) &gt; 0.85 * fc.HottestEngineMaxTemperature(true))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.HottestEngineTemperature(true) &gt; 0.85 * fc.HottestEngineMaxTemperature(true))</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_GPWS_OFF</name>
			<style>Alarm</style>
			<AUDIO_PLAYER>
				<name>Alarm</name>
				<sound>ASET/ASET_Props/Sounds/AlarmBeep02</sound>
				<volume>1</volume>
				<trigger>ON</trigger>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("GPWS_ON") == 0)</variable>
			</AUDIO_PLAYER>
			<TEXT_LABEL>
				<text>OFF</text>
				<fontSize>6.5</fontSize>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("GPWS_ON") == 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("GPWS_ON") == 0)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_GroundProximity</name>
			<style>Alarm</style>
			<TRIGGER_EVENT>
				<name>trigger</name>
				<event>fc.SetPersistent("ALCOR_GROUNDPROXIMITYALARM_ON", 1)</event>
				<exitEvent>fc.SetPersistent("ALCOR_GROUNDPROXIMITYALARM_ON", 0)</exitEvent>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("GPWS_ON") &gt; 0 and fc.VerticalSpeed() &lt; -1 and fc.AltitudeBottom() &lt; 15)</variable>
			</TRIGGER_EVENT>
			<TEXT_LABEL>
				<text>GROUND$$$PROX</text>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_GROUNDPROXIMITYALARM_ON"))</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_GROUNDPROXIMITYALARM_ON"))</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_PodHeat</name>
			<style>Alarm</style>
			<TRIGGER_EVENT>
				<name>trigger</name>
				<event>fc.SetPersistent("ALCOR_PODTEMPERATUREALARM_ON", 1)</event>
				<exitEvent>fc.SetPersistent("ALCOR_PODTEMPERATUREALARM_ON", 0)</exitEvent>
				<variable>fc.Conditioned(fc.PodTemperature(true) &gt; 0.7 * fc.PodMaxTemperature(true))</variable>
			</TRIGGER_EVENT>
			<TEXT_LABEL>
				<text>CABIN$$$OVERHEAT</text>
				<variable>fc.Conditioned(fc.PodTemperature(true) &gt; 0.7 * fc.PodMaxTemperature(true))</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.PodTemperature(true) &gt; 0.7 * fc.PodMaxTemperature(true))</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_HighSlope</name>
			<style>Alarm</style>
			<TRIGGER_EVENT>
				<name>trigger</name>
				<event>fc.SetPersistent("ALCOR_SLOPEALARM_ON", 1)</event>
				<exitEvent>fc.SetPersistent("ALCOR_SLOPEALARM_ON", 0)</exitEvent>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ASET_WARN_SLOPE_ON") &gt; 0 and fc.AltitudeBottom() &lt; 15 and fc.SlopeAngle() &gt; 15)</variable>
			</TRIGGER_EVENT>
			<TEXT_LABEL>
				<text>HIGH$$$SLOPE</text>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_SLOPEALARM_ON"))</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_SLOPEALARM_ON"))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_SLOPEALARM_ON"))</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_LandingGear</name>
			<style>Alarm</style>
			<TRIGGER_EVENT>
				<name>trigger</name>
				<event>fc.SetPersistent("ALCOR_GEARALARM_ON_LANDING", 1)</event>
				<exitEvent>fc.SetPersistent("ALCOR_GEARALARM_ON_LANDING", 0)</exitEvent>
				<variable>fc.Conditioned(fc.VerticalSpeed() &lt; 1 and fc.AltitudeBottom() &lt; 1000 and fc.GetGear() == 0)</variable>
			</TRIGGER_EVENT>
			<TEXT_LABEL>
				<text>LANDING$$$GEAR</text>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_GROUNDPROXIMITYALARM_ON"))</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_GROUNDPROXIMITYALARM_ON"))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_GROUNDPROXIMITYALARM_ON"))</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_HeatshieldOverheat</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>SHIELD$$$OVERHEAT</text>
				<variable>fc.Conditioned(fc.HeatShieldMaxTemperature(true) - fc.HeatShieldTemperature(true) &lt; 700)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.HeatShieldMaxTemperature(true) - fc.HeatShieldTemperature(true) &lt; 700)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.6</endUV>
				<variable>fc.Conditioned(fc.HeatShieldMaxTemperature(true) - fc.HeatShieldTemperature(true) &lt; 700)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_LowAltitude</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>ALTITUDE</text>
				<!-- Not done yet -->
				<variable>fc.Conditioned(0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_LowFuel</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>LIQUID$$$FUEL</text>
				<variable>fc.Conditioned(fc.ResourceExists("LiquidFuel") &gt; 0 and fc.ResourcePercent("LiquidFuel") &lt; 0.1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.ResourceExists("LiquidFuel") &gt; 0 and fc.ResourcePercent("LiquidFuel") &lt; 0.1)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.ResourceExists("LiquidFuel") &gt; 0 and fc.ResourcePercent("LiquidFuel") &lt; 0.1)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_LowMonopropellant</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>MONO$$$PROPELLANT</text>
				<variable>fc.Conditioned(fc.ResourceExists("MonoPropellant") &gt; 0 and fc.ResourcePercent("MonoPropellant") &lt; 0.1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.ResourceExists("MonoPropellant") &gt; 0 and fc.ResourcePercent("MonoPropellant") &lt; 0.1)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.ResourceExists("MonoPropellant") &gt; 0 and fc.ResourcePercent("MonoPropellant") &lt; 0.1)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_LowOxidizer</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>OXIDIZER</text>
				<variable>fc.Conditioned(fc.ResourceExists("Oxidizer") &gt; 0 and fc.ResourcePercent("Oxidizer") &lt; 0.1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.ResourceExists("Oxidizer") &gt; 0 and fc.ResourcePercent("Oxidizer") &lt; 0.1)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.ResourceExists("Oxidizer") &gt; 0 and fc.ResourcePercent("Oxidizer") &lt; 0.1)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_LowXenon</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>XENON</text>
				<variable>fc.Conditioned(fc.ResourceExists("XenonGas") &gt; 0 and fc.ResourcePercent("XenonGas") &lt; 0.1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.ResourceExists("XenonGas") &gt; 0 and fc.ResourcePercent("XenonGas") &lt; 0.1)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.ResourceExists("XenonGas") &gt; 0 and fc.ResourcePercent("XenonGas") &lt; 0.1)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_LowPower</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>LOW CHARGE</text>
				<variable>fc.Conditioned(fc.PowerPercent() &lt; 0.2)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.PowerPercent() &lt; 0.2)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.PowerPercent() &lt; 0.2)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_LowTWR</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>LOW TWR</text>
				<variable>fc.Conditioned(fc.CurrentTWR() &gt; 0.01 and fc.CurrentTWR() &lt; 0.99)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.CurrentTWR() &gt; 0.01 and fc.CurrentTWR() &lt; 0.99)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.CurrentTWR() &gt; 0.01 and fc.CurrentTWR() &lt; 0.99)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_Overspeed</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>OVERSPEED</text>
				<variable>fc.Conditioned(fc.TerminalVelocity() &gt; 0 and fc.SurfaceSpeed() &gt; fc.TerminalVelocity())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.TerminalVelocity() &gt; 0 and fc.SurfaceSpeed() &gt; fc.TerminalVelocity())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.TerminalVelocity() &gt; 0 and fc.SurfaceSpeed() &gt; fc.TerminalVelocity())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_LandingGear_Broken</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>LANDING GEAR$$$BROKEN</text>
				<variable>fc.Conditioned(fc.GearBrokenCount() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GearBrokenCount() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.GearBrokenCount() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_SolarArray_Broken</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>SOLAR ARRAY$$$BROKEN</text>
				<variable>fc.Conditioned(fc.SolarPanelDamaged() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SolarPanelDamaged() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.SolarPanelDamaged() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_StageLocked</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>STAGE$$$LOCKED</text>
				<variable>fc.Conditioned(fc.GetStageLocked())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetStageLocked())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.GetStageLocked())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_Stall</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>STALL</text>
				<variable>fc.Conditioned(far.StallFraction() &gt; 0.02 and fc.VesselFlying() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(far.StallFraction() &gt; 0.02 and fc.VesselFlying() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(far.StallFraction() &gt; 0.02 and fc.VesselFlying() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_Tumble</name>
			<style>Alarm</style>
			<TRIGGER_EVENT>
				<name>trigger</name>
				<event>fc.SetPersistent("ALCOR_TUMBLEALARM_ON", 1)</event>
				<exitEvent>fc.SetPersistent("ALCOR_TUMBLEALARM_ON", 0)</exitEvent>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ASET_WARN_TUMBLE_ON") &gt; 0 and fc.AltitudeBottom() &lt; 15 and fc.HorizontalSpeed() &gt; 5)</variable>
			</TRIGGER_EVENT>
			<TEXT_LABEL>
				<text>TUMBLE</text>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_TUMBLEALARM_ON"))</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_TUMBLEALARM_ON"))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0, 0.2</endUV>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_TUMBLEALARM_ON"))</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Alarm_Master</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>MASTER$$$ALARM</text>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_PODTEMPERATUREALARM_ON") + fc.GetPersistentAsNumber("ALCOR_GROUNDPROXIMITYALARM_ON") + fc.GetPersistentAsNumber("ALCOR_SLOPEALARM_ON") + fc.GetPersistentAsNumber("ALCOR_ENGINEOVERHEATALARM_ON") + fc.GetPersistentAsNumber("ALCOR_ENGFAILURE_ON") + fc.GetPersistentAsNumber("ALCOR_DOCKINGANGLEALARM_ON") + fc.GetPersistentAsNumber("ALCOR_DOCKINGSPEEDALARM_ON") + fc.GetPersistentAsNumber("ALCOR_GEARALARM_ON_LANDING") + fc.GetPersistentAsNumber("ALCOR_TUMBLEALARM_ON"))</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_PODTEMPERATUREALARM_ON") + fc.GetPersistentAsNumber("ALCOR_GROUNDPROXIMITYALARM_ON") + fc.GetPersistentAsNumber("ALCOR_SLOPEALARM_ON") + fc.GetPersistentAsNumber("ALCOR_ENGINEOVERHEATALARM_ON") + fc.GetPersistentAsNumber("ALCOR_ENGFAILURE_ON") + fc.GetPersistentAsNumber("ALCOR_DOCKINGANGLEALARM_ON") + fc.GetPersistentAsNumber("ALCOR_DOCKINGSPEEDALARM_ON") + fc.GetPersistentAsNumber("ALCOR_GEARALARM_ON_LANDING") + fc.GetPersistentAsNumber("ALCOR_TUMBLEALARM_ON"))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<startUV>0, 0.4</startUV>
				<endUV>0.5, 0.4</endUV>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("ALCOR_PODTEMPERATUREALARM_ON") + fc.GetPersistentAsNumber("ALCOR_GROUNDPROXIMITYALARM_ON") + fc.GetPersistentAsNumber("ALCOR_SLOPEALARM_ON") + fc.GetPersistentAsNumber("ALCOR_ENGINEOVERHEATALARM_ON") + fc.GetPersistentAsNumber("ALCOR_ENGFAILURE_ON") + fc.GetPersistentAsNumber("ALCOR_DOCKINGANGLEALARM_ON") + fc.GetPersistentAsNumber("ALCOR_DOCKINGSPEEDALARM_ON") + fc.GetPersistentAsNumber("ALCOR_GEARALARM_ON_LANDING") + fc.GetPersistentAsNumber("ALCOR_TUMBLEALARM_ON"))</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_AlarmEPG</name>
			<style>PassiveAlarm</style>
			<TEXT_LABEL>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.8</lineSpacing>
				<text>EMERGENCY$$$POWER$$$GENERATOR</text>
				<variable>fc.GetPersistentAsNumber("ALCOR_EPG_FAKE")</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.GetPersistentAsNumber("ALCOR_EPG_FAKE")</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_AlarmExCabinWater</name>
			<style>PassiveAlarm</style>
			<TEXT_LABEL>
				<text>EXCESS CABIN$$$WATER</text>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.005) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.005) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.1)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_AlarmExSuitWater</name>
			<style>PassiveAlarm</style>
			<TEXT_LABEL>
				<text>EXCESS SUIT$$$WATER</text>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.005) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.005) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.1)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_AlarmMaster</name>
			<style>PassiveAlarm</style>
			<TEXT_LABEL>
				<text>MASTER$$$ALARM</text>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.004) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.01)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.004) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.01)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<name>Panel Color</name>
				<transform>TabloColorPlate</transform>
				<startUV>0.0, 0.6</startUV>
				<layers>_MainTex _Emissive</layers>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_AlarmOxFlow</name>
			<style>PassiveAlarm</style>
			<TEXT_LABEL>
				<text>EXCESS SUIT$$$WATER</text>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.004) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.01)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.004) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.01)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_AlarmRadiator</name>
			<style>PassiveAlarm</style>
			<TEXT_LABEL>
				<text>RADIATORS</text>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.004) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.02)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.004) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.02)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_AlarmValve</name>
			<style>PassiveAlarm</style>
			<TEXT_LABEL>
				<text>VALVE$$$CLOSE</text>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.004) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.05)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.004) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.05)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_GoodCabinFans</name>
			<style>PassiveStatus</style>
			<TEXT_LABEL>
				<text>CABIN FANS</text>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.004) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.05)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.004) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.05)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_GoodCabinPressAuto</name>
			<style>PassiveStatus</style>
			<TEXT_LABEL>
				<text>CABIN PRESS$$$AUTO</text>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.003) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.45)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.003) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.45)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_GoodCabinTempAuto</name>
			<style>PassiveStatus</style>
			<TEXT_LABEL>
				<text>CABIN TEMP$$$AUTO</text>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.003) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.55)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.003) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.55)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_GoodHeaters</name>
			<style>PassiveStatus</style>
			<TEXT_LABEL>
				<text>HEATERS</text>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.007) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.35)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.007) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.35)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_GoodManual</name>
			<style>PassiveStatus</style>
			<TEXT_LABEL>
				<text>MANUAL</text>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.007) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.05)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.007) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.05)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_GoodSuitFans</name>
			<style>PassiveStatus</style>
			<TEXT_LABEL>
				<text>SUIT FANS</text>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.005) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.35)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.005) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.35)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Fake_GoodTestOK</name>
			<style>PassiveStatus</style>
			<TEXT_LABEL>
				<text>TEST OK</text>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.007) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.05)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SafeModulo(fc.PeriodRandom(0.007) + (%PROPID%/%PROPCOUNT%), 1) &lt; 0.05)</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_CommnetConnected</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>COMMNET$$$CONNECTED</text>
				<variable>fc.Conditioned(fc.CommNetConnected())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.CommNetConnected())</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_CommnetNoSignal</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>NO SIGNAL</text>
				<variable>fc.Conditioned(1 - fc.CommNetConnected())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(1 - fc.CommNetConnected())</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_UIStagingMode</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>STAGING$$$MODE</text>
				<variable>fc.Conditioned(fc.FlightUIMode() == 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.FlightUIMode() == 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.FlightUIMode() == 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_UIDockingMode</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>DOCKING$$$MODE</text>
				<variable>fc.Conditioned(fc.FlightUIMode() == 1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.FlightUIMode() == 1)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.FlightUIMode() == 1)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_DockIsReference</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>DOCK PORT$$$IS REFERENCE</text>
				<variable>fc.Conditioned(fc.GetDockIsReference())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetDockIsReference())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GetDockIsReference())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Alternator_Active</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>ALTERNATOR$$$ACTIVE</text>
				<variable>fc.Conditioned(fc.AlternatorOutput() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.AlternatorOutput() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.AlternatorOutput() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Alternator_Available</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>ALTERNATOR$$$AVAILABLE</text>
				<variable>fc.Conditioned(fc.AlternatorCount() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.AlternatorCount() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.AlternatorCount() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_TargetApproach</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>APPROACH</text>
				<variable>fc.Conditioned(fc.TargetSpeed() &gt; 0.01)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.TargetSpeed() &gt; 0.01)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.TargetSpeed() &gt; 0.01)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Ascent</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>ASCENT</text>
				<variable>fc.Conditioned(fc.VerticalSpeed() &gt; 0.1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.VerticalSpeed() &gt; 0.1)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.VerticalSpeed() &gt; 0.1)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_FuelCell_Active</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>FUEL CELL$$$ACTIVE</text>
				<variable>fc.Conditioned(fc.FuelCellOutput() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.FuelCellOutput() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.FuelCellOutput() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_FuelCell_Available</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>FUEL CELL$$$AVAILABLE</text>
				<variable>fc.Conditioned(fc.FuelCellCount() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.FuelCellCount() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.FuelCellCount() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_FuelCell_Enabled</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>FUEL$$$CELL</text>
				<variable>fc.Conditioned(fc.GetFuelCellActive())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetFuelCellActive())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GetFuelCellActive())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Generator_Active</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>GENERATOR$$$ACTIVE</text>
				<variable>fc.Conditioned(fc.GeneratorOutput() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GeneratorOutput() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GeneratorOutput() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Generator_Available</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>GENERATOR$$$AVAILABLE</text>
				<variable>fc.Conditioned(fc.GeneratorCount() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GeneratorCount() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GeneratorCount() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_GimbalLocked</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>GIMBAL$$$LOCKED</text>
				<variable>fc.Conditioned(fc.GetGimbalsLocked())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetGimbalsLocked())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GetGimbalsLocked())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_AVAS_On</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>ON</text>
				<fontSize>6</fontSize>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("AVAS_ON"))</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("AVAS_ON"))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("AVAS_ON"))</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_GPWS_On</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>ON</text>
				<fontSize>6</fontSize>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("GPWS_ON"))</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("GPWS_ON"))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("GPWS_ON"))</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Chatterer_Available</name>
			<style>Status</style>
			<TEXT_LABEL>
				<fontSize>6</fontSize>
				<text>ON</text>
				<variable>fc.Conditioned(chatterer.Available())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(chatterer.Available())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(chatterer.Available())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Chatterer_Recv</name>
			<style>Status</style>
			<TEXT_LABEL>
				<fontSize>6</fontSize>
				<text>RECV</text>
				<variable>fc.Conditioned(chatterer.Receiving())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(chatterer.Receiving())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(chatterer.Receiving())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Chatterer_Xmit</name>
			<style>Status</style>
			<TEXT_LABEL>
				<fontSize>6</fontSize>
				<text>XMIT</text>
				<variable>fc.Conditioned(chatterer.Transmitting())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(chatterer.Transmitting())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(chatterer.Transmitting())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Chatterer_Standby</name>
			<style>Status</style>
			<TEXT_LABEL>
				<fontSize>6</fontSize>
				<text>STBY</text>
				<variable>fc.Conditioned(chatterer.Available() - (chatterer.Transmitting() + chatterer.Receiving()))</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(chatterer.Available() - (chatterer.Transmitting() + chatterer.Receiving()))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(chatterer.Available() - (chatterer.Transmitting() + chatterer.Receiving()))</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Parachute_Safe</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>SAFE$$$TO DEPLOY</text>
				<variable>fc.Conditioned(parachute.DeploymentSafe())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(parachute.DeploymentSafe())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(parachute.DeploymentSafe())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Battery_Charging</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>BATTERY$$$CHARGING</text>
				<variable>fc.Conditioned(fc.PowerDelta() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.PowerDelta() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.PowerDelta() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_TargetDepart</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>DEPART</text>
				<variable>fc.Conditioned(fc.TargetSpeed() &lt; -0.01)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.TargetSpeed() &lt; -0.01)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.TargetSpeed() &lt; -0.01)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Descent</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>DESCENT</text>
				<variable>fc.Conditioned(fc.VerticalSpeed() &lt; -0.1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.VerticalSpeed() &lt; -0.1)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.VerticalSpeed() &lt; -0.1)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Auto_Speedbrake</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>AUTO$$$SPEED BRAKE</text>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("AUTOSPEEDBRAKE_ARM") * fc.GetGear() * fc.VesselFlying())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("AUTOSPEEDBRAKE_ARM") * fc.GetGear() * fc.VesselFlying())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("AUTOSPEEDBRAKE_ARM") * fc.GetGear() * fc.VesselFlying())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Brakes</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>BRAKES</text>
				<variable>fc.Conditioned(fc.GetBrakes())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetBrakes())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GetBrakes())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Contact</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>CONTACT</text>
				<variable>fc.Conditioned(fc.VesselLanded())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.VesselLanded())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.VesselLanded())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Dock_Targeted</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>TARGET D/P$$$SELECTED</text>
				<variable>fc.Conditioned(fc.TargetType() == 2)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.TargetType() == 2)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.TargetType() == 2)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Docked</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>VESSEL$$$DOCKED</text>
				<variable>fc.Conditioned(fc.Docked())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.Docked())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.Docked())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_FlapsExtended</name>
			<style>Status</style>
			<TRIGGER_EVENT>
				<name>Flaps Good Status</name>
				<event>fc.SetPersistent("ASET_FLAPS_GOOD", 1)</event>
				<exitEvent>fc.SetPersistent("ASET_FLAPS_GOOD", 0)</exitEvent>
				<variable>fc.Abs(fc.VerticalSpeed()) &lt; 30 and fc.EquivalentAirspeed() &lt; 250</variable>
			</TRIGGER_EVENT>
			<TEXT_LABEL>
				<text>FLAPS$$$EXTENDED</text>
				<variable>fc.Conditioned(far.GetFlapSetting() > 0 and ((fc.GetPersistentAsNumber("ASET_FLAPS_GOOD") + fc.PeriodStep(2)) &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(far.GetFlapSetting() > 0 and ((fc.GetPersistentAsNumber("ASET_FLAPS_GOOD") + fc.PeriodStep(2)) &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(far.GetFlapSetting() > 0 and ((fc.GetPersistentAsNumber("ASET_FLAPS_GOOD") + fc.PeriodStep(2)) &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Gear</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>LANDING$$$GEAR</text>
				<variable>fc.Conditioned(fc.GetGear())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetGear())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GetGear())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_LeftGear</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>LEFT$$$GEAR</text>
				<variable>fc.Conditioned(fc.GearMoving() &gt; 0 or fc.GearPosition() == 1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GearMoving() &gt; 0 or fc.GearPosition() == 1)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GearMoving() &gt; 0 or fc.GearPosition() == 1)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_NoseGear</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>NOSE$$$GEAR</text>
				<variable>fc.Conditioned(fc.GearMoving() &gt; 0 or fc.GearPosition() == 1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GearMoving() &gt; 0 or fc.GearPosition() == 1)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GearMoving() &gt; 0 or fc.GearPosition() == 1)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_RightGear</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>RIGHT$$$GEAR</text>
				<variable>fc.Conditioned(fc.GearMoving() &gt; 0 or fc.GearPosition() == 1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GearMoving() &gt; 0 or fc.GearPosition() == 1)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GearMoving() &gt; 0 or fc.GearPosition() == 1)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_LandingGear_Deployed</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>LANDING GEAR$$$DEPLOYED</text>
				<variable>fc.Conditioned(fc.GearPosition() &gt; 0.5)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GearPosition() &gt; 0.5)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GearPosition() &gt; 0.5)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_LandingGear_Deploying</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>LANDING GEAR$$$DEPLOYING</text>
				<variable>fc.Conditioned(fc.GearMoving() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GearMoving() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GearMoving() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_LandingGear_Retracted</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>LANDING GEAR$$$RETRACTED</text>
				<variable>fc.Conditioned(fc.GearCount() &gt; 0 and fc.GearPosition() == 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GearCount() &gt; 0 and fc.GearPosition() == 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GearCount() &gt; 0 and fc.GearPosition() == 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_LandingGear_Retracting</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>LANDING GEAR$$$RETRACTING</text>
				<variable>fc.Conditioned(fc.GearMoving() &lt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GearMoving() &lt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GearMoving() &lt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Lights</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>LIGHTS</text>
				<variable>fc.Conditioned(fc.GetLights())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetLights())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GetLights())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_MECO</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>MECO</text>
				<variable>fc.Conditioned(fc.CurrentThrustkN() &lt; 0.0001)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.CurrentThrustkN() &lt; 0.0001)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.CurrentThrustkN() &lt; 0.0001)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_PrecisionCtrl</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>PRECISION$$$CONTROL</text>
				<variable>fc.Conditioned(fc.GetPrecisionMode())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetPrecisionMode())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GetPrecisionMode())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_RCSActive</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>RCS$$$ACTIVE</text>
				<variable>fc.Conditioned(fc.GetRCS())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetRCS())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GetRCS())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_RCSEnabled</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>RCS</text>
				<variable>fc.Conditioned(fc.GetRCS())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetRCS())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GetRCS())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_SAS</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>SAS</text>
				<variable>fc.Conditioned(fc.GetSAS())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetSAS())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.GetSAS())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_SolarArray_Active</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>SOLAR ARRAY$$$ACTIVE</text>
				<variable>fc.Conditioned(fc.SolarPanelOutput() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SolarPanelOutput() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.SolarPanelOutput() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_SolarArray_Available</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>SOLAR ARRAY$$$AVAILABLE</text>
				<variable>fc.Conditioned(fc.SolarPanelCount() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SolarPanelCount() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.SolarPanelCount() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_SolarArray_Deployed</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>SOLAR ARRAY$$$DEPLOYED</text>
				<variable>fc.Conditioned(fc.SolarPanelPosition() &gt; 0.5)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SolarPanelPosition() &gt; 0.5)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.SolarPanelPosition() &gt; 0.5)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_SolarArray_Retracted</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>SOLAR ARRAY$$$RETRACTED</text>
				<variable>fc.Conditioned(fc.SolarPanelCount() &gt; 0 and fc.SolarPanelPosition() &lt; 0.5)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.SolarPanelCount() &gt; 0 and fc.SolarPanelPosition() &lt; 0.5)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.SolarPanelCount() &gt; 0 and fc.SolarPanelPosition() &lt; 0.5)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_StageReady</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>STAGE$$$READY</text>
				<variable>fc.Conditioned(fc.StageReady())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.StageReady())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.StageReady())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_SpoilerExtended</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>SPOILERS$$$EXTENDED</text>
				<variable>fc.Conditioned(far.GetSpoilerSetting() > 0 and (fc.VerticalSpeed() &lt; 10 or fc.PeriodStep(2) &gt; 0))</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(far.GetSpoilerSetting() > 0 and (fc.VerticalSpeed() &lt; 10 or fc.PeriodStep(2) &gt; 0))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(far.GetSpoilerSetting() > 0 and (fc.VerticalSpeed() &lt; 10 or fc.PeriodStep(2) &gt; 0))</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_ThrustReverser</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>REVERSE</text>
				<variable>fc.Conditioned(engine.ThrustReverserPosition() &gt; 0)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(engine.ThrustReverserPosition() &gt; 0)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(engine.ThrustReverserPosition() &gt; 0)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_TrimEnabled</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>TRIM</text>
				<variable>fc.Conditioned(fc.Abs(fc.GetPitchTrim()) &gt; 0.01 or fc.Abs(fc.GetRollTrim()) &gt; 0.01 or fc.Abs(fc.GetYawTrim()) &gt; 0.01)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.Abs(fc.GetPitchTrim()) &gt; 0.01 or fc.Abs(fc.GetRollTrim()) &gt; 0.01 or fc.Abs(fc.GetYawTrim()) &gt; 0.01)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>fc.Conditioned(fc.Abs(fc.GetPitchTrim()) &gt; 0.01 or fc.Abs(fc.GetRollTrim()) &gt; 0.01 or fc.Abs(fc.GetYawTrim()) &gt; 0.01)</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_Warp</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>WARP</text>
				<passiveColor>80,175,80,255</passiveColor>
				<activeColor>150,255,100,255</activeColor>
				<variable>fc.Conditioned(fc.WarpRate() &gt; 1.1)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.WarpRate() &gt; 1.1)</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<variable>0</variable>
				<startUV>0, 0.8</startUV>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_APU_On</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>APU GEN</text>
				<variable>fc.Conditioned(fc.GetFuelCellActive())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<variable>fc.Conditioned(fc.GetFuelCellActive())</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<startUV>0.5, 0.6</startUV>
				<endUV delete="true" />
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_EngineMode1</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>MODE 1</text>
				<activeColor>50,255,30,255</activeColor>
				<variable>fc.Conditioned(1 - fc.GetMultiModeEngineMode())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<activeColor>50,255,100,255</activeColor>
				<variable>fc.Conditioned(1 - fc.GetMultiModeEngineMode())</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_EngineMode2</name>
			<style>Status</style>
			<TEXT_LABEL>
				<text>MODE 2</text>
				<variable>fc.Conditioned(fc.GetMultiModeEngineMode())</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<activeColor>255,255,100,255</activeColor>
				<variable>fc.Conditioned(fc.GetMultiModeEngineMode())</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_Tablo_Status_AircraftLimitedThrust</name>
			<style>Alarm</style>
			<TEXT_LABEL>
				<text>LIMITED$$$THRUST</text>
				<variable>fc.Conditioned(fc.GetThrottleLimit() &gt; 0.001 and fc.GetThrottleLimit() &lt; 0.99)</variable>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<activeColor>255,255,100,255</activeColor>
				<variable>fc.Conditioned(fc.GetThrottleLimit() &gt; 0.001 and fc.GetThrottleLimit() &lt; 0.99)</variable>
			</COLOR_SHIFT>
		</prop>
	</TabloIndicator>
</PropConfig>
