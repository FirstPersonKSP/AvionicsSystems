PROP
{
	name = MAS_ImpactSpeedIndicator
	MODEL
	{
		model = ASET/ASET_Props/Instruments/ImpactSpeedIndicator/PhaseAngleIndicator
		texture = PhaseAngle, ASET/ASET_Props/Instruments/ImpactSpeedIndicator/PhaseAngle
	}

	MODULE
	{
		name = MASComponent

// arrows rotation
// OUTER
		ROTATION
		{
			name = Arrow 1
			transform = Arrow01Loc
			// variable = fc.Conditioned(fc.LandingSpeed())
			variable = fc.Conditioned((fc.SurfaceSpeed < 0) * fc.Max(0, fc.SurfaceSpeed() + fc.AccelSurfacePrograde() * fc.LandingTime()))
			startRotation = 0,0,0
			endRotation = 0,306,0
			longPath = true
			range = 0, 50
			// modulo = 360
			blend = true
			speed = 1.0
		}

// INNER
		ROTATION
		{
			name = Arrow 2
			transform = Arrow02Loc
			// need to calculate impact speed if throttle maxed given current thrust limit
			variable = fc.Conditioned(( fc.VerticalSpeed() < 0 ) * ((fc.Max(0, fc.VerticalSpeed() * fc.VerticalSpeed() - 2 * fc.AltitudeTerrain(true) * (fc.MaxTWR(true) - fc.BodyGeeASL(fc.CurrentBodyIndex()))))^0.5))
			startRotation = 0,0,0
			endRotation = 0,348,0
			longPath = true
			range = 0, 9.5
			// modulo = 10
			blend = true
			speed = 1.0
		}

// ----- OFF animation -----------------------------
		ANIMATION
		{
			name = Unit Off Anim
			animation = PhaseAngleIndicatorOFFanim
			variable = fc.Conditioned(fc.LandingPredictorActive())
			speed = 4
		}

// Backlight emissive ---------------------------------
		COLOR_SHIFT
		{
			name = ScaleObj
			transform = ScaleObj, ZeroSignObj, OFF_SignObj
			activeColor = COLOR_ASET_NASAGAUGESCALE_ACTIVECOLOR
			passiveColor = 0,0,0,255
			variable = fc.Conditioned(fc.LandingPredictorActive() * fc.GetPersistentAsNumber("Backlight"))
			blend = true
		}
		COLOR_SHIFT
		{
			name = Arrow Obj
			transform = Arrow01Obj, Arrow02Obj, NamePlateObj
			activeColor = COLOR_ASET_NASAGAUGEHAND_ACTIVECOLOR
			passiveColor = 0,0,0,255
			variable = fc.Conditioned(fc.LandingPredictorActive() * fc.GetPersistentAsNumber("Backlight"))
			blend = true
		}
	}
}
