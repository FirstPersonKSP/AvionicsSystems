//This should toggle the power on/off for the PitchRoll_Display, *unless* the display is used in conjunction with the Hud_No_Body display, in which case, the MAS_pb_HUD_NB_Power & MAS_pb_HUD_Mode_Fly-Drive buttons should be used in the IVA for this functionality, instead
PROP
{
	name = MAS_pb_HUD_PitchRoll_Power

	// Black full cap
	MODEL
	{
		model = ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap
		texture = pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black
		texture = Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse
	}

	// Glow Border Type 5 - 3/4 wrap around, text on top
	MODEL
	{
		model = ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_5
		texture = Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse
	}

	MODEL
	{
		model = ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider
	}

	MODULE
	{
		name = MASComponent

		COLLIDER_EVENT
		{
			name = Collider
			collider = pb_Collider
			sound = ASET/ASET_Props/Sounds/pb_Push02
			volume = 1
			onClick = fc.TogglePersistent("Global_Hud_Type")
//			onClick = fc.TogglePersistent("ERSHUD_Compass") and fc.TogglePersistent("ERSHUD_Orientation")
		}

		ANIMATION_PLAYER
		{
			name = Button press animation
			animation = pb_PushAnim
			animationSpeed = 1.0
			variable = fc.GetPersistentAsNumber("PitchRoll_Display")
		}

		TEXT_LABEL
		{
			name = Caption
			transform = PanelTextTop_bklt
			fontSize = 5.0
			lineSpacing = 0.9
			font = Liberation Sans
			style = Bold
			alignment = Center
			anchor = LowerCenter
			emissive = active
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			blend = true
			activeColor = COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR
			passiveColor = COLOR_ASET_SWITCHER_NAME_ZEROCOLOR
			text = HUD$$$MODE
		}

		TEXT_LABEL
		{
			name = Upper Legend
			transform = Legend_Upper
			fontSize = 4.5
			lineSpacing = 0.9
			font = Liberation Sans
			style = Bold
			alignment = Center
			anchor = MiddleCenter
			emissive = active
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Global_Hud_Type") == 0)
			activeColor = COLOR_MOARdV_IndicatorLampGreen
			passiveColor = COLOR_MOARdV_IndicatorLampAmber
			text = FLY
		}

		TEXT_LABEL
		{
			name = Upper Legend Bullets
			transform = Legend_Upper
			fontSize = 3.9
			lineSpacing = 0.9
			font = Liberation Sans
			style = Bold
			alignment = Center
			anchor = MiddleCenter
			emissive = active
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Global_Hud_Type") == 0)
			activeColor = COLOR_MOARdV_IndicatorLampGreen
			passiveColor = COLOR_MOARdV_IndicatorLampAmber
			text = ●           ●
		}

		TEXT_LABEL
		{
			name = Lower Legend
			transform = Legend_Lower
			fontSize = 3.9
			lineSpacing = 0.9
			font = Liberation Sans
			style = Bold
			alignment = Center
			anchor = MiddleCenter
			emissive = active
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Global_Hud_Type") == 1)
			activeColor = COLOR_MOARdV_IndicatorLampGreen
			passiveColor = COLOR_MOARdV_IndicatorLampAmber
			text = DRIVE
		}

		TEXT_LABEL
		{
			name = Lower Legend Bullets
			transform = Legend_Lower
			fontSize = 3.9
			lineSpacing = 0.9
			font = Liberation Sans
			style = Bold
			alignment = Center
			anchor = MiddleCenter
			emissive = active
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Global_Hud_Type") == 1)
			activeColor = COLOR_MOARdV_IndicatorLampGreen
			passiveColor = COLOR_MOARdV_IndicatorLampAmber
			text = ●           ●
		}

		COLOR_SHIFT
		{
			name = Border
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}
	}
}
