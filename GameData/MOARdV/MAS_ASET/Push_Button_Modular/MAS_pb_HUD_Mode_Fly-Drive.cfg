//This should toggle between HUD_No_Body and PitchRoll_Display &/or Drive_Display, *if* two or all three are used in the IVA
PROP
{
	name = MAS_pb_HUD_Mode_Fly-Drive

 	MODEL
	{
		model = ASET/ASET_Props/Control/Push_Button_Modular/models/pb_SplitHorizontal_Cap
		texture = pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black
		texture = Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse
	}

 	MODEL
	{
		model = ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_6
		texture = Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse
	}	

 	MODEL
	{
		model = ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider
	}	

	MODULE
	{
		name = MASComponent
		
		COLLIDER_EVENT
		{
			name = Button Collider
			collider = pb_Collider
			onClick = fc.TogglePersistent("Global_Hud_Type")
//			onClick = fc.TogglePersistent("Global_Hud_Type") and fc.TogglePersistent("ERSHUD_Compass") and fc.TogglePersistent("ERSHUD_Orientation")
			sound = ASET/ASET_Props/Sounds/pb_Push01
			volume = 1
		}
		
		ANIMATION
		{
			name = Button Animation
			animation = pb_PushAnim
			variable = fc.GetPersistent("Global_Hud_Type")
//			variable = fc.GetPersistent("Global_Hud_Type") and fc.GetPersistent("ERSHUD_Compass") and fc.GetPersistent("ERSHUD_Orientation")
			speed = 5
		}
		
		TEXT_LABEL
		{
			name = Caption
			transform = PanelTextTop_bklt
			fontSize = 5.0
			lineSpacing = 0.9
			font = Liberation Sans
			style = Bold
			alignment = Center
			anchor = LowerCenter
			emissive = active
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			blend = true
			activeColor = COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR
			passiveColor = COLOR_ASET_SWITCHER_NAME_ZEROCOLOR
			text = HUD$$$MODE
		}

		COLOR_SHIFT
		{
			name = Border
			transform = GlowBorder
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			blend = true
		}

		
		TEXT_LABEL
		{
			name = Upper Legend
			transform = Legend_Upper
			font = Liberation Sans
//			font = InconsolataGo-Bold
			fontSize = 4.5
			oneshot = true
			style = Bold
			alignment = Center
			anchor = MiddleCenter
			emissive = active
			activeColor = COLOR_MOARdV_UnlitBlackText
			passiveColor = 0,0,0,255	//COLOR_MOARdV_PassiveWhiteText
//			blend = true
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Global_Hud_Type") < 1)	// and fc.GetPersistent("ERSHUD_Compass") < 1 and fc.GetPersistent("ERSHUD_Orientation") < 1)
			text = FLY
		}
		
		TEXT_LABEL
		{
			name = Lower Legend
			transform = Legend_Lower
			font = Liberation Sans
			font = InconsolataGo-Bold
			fontSize = 4.5
			oneshot = true
			style = Bold
			alignment = Center
			anchor = MiddleCenter
			emissive = active
			activeColor = COLOR_MOARdV_UnlitBlackText
			passiveColor = 0,0,0,255	//COLOR_MOARdV_PassiveWhiteText
			blend = true
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Global_Hud_Type") < 0)
//			variable = fc.Conditioned(fc.GetPersistentAsNumber("Global_Hud_Type") < 0 and fc.GetPersistent("ERSHUD_Compass") < 0 and fc.GetPersistent("ERSHUD_Orientation") < 0)
			text = DRIVE
		}
		
		COLOR_SHIFT
		{
			name = Lower Legend
			transform = Legend_Lower
			emissive = active
			passiveColor = 0, 0, 0, 255
			activeColor = COLOR_MOARdV_IndicatorLampGreen
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Global_Hud_Type") < 0)
//			variable = fc.Conditioned(fc.GetPersistentAsNumber("Global_Hud_Type") < 0 and fc.GetPersistent("ERSHUD_Compass") < 0 and fc.GetPersistent("ERSHUD_Orientation") < 0)
		}

//		COLOR_SHIFT
//		{
//			name = Bottom Lens
//			transform = pb_SH_BottomLens_obj
//			emissive = active
//			passiveColor = 0, 0, 0, 255
//			activeColor = COLOR_ASET_mpb_ORANGE
//			variable = fc.Conditioned(fc.GetPersistentAsNumber("Global_Hud_Type") < 0)
//		}
		
//		TEXTURE_SHIFT
//		{
//			name = Bottom Lens
//			transform = pb_SH_BottomLens_obj
//			startUV = 0, 0
//			endUV = 0, -0.5
//			layers = _Emissive
//			variable = fc.Conditioned(fc.GetPersistentAsNumber("Global_Hud_Type") < 0)
//			blend = true
//		}

//		COLOR_SHIFT
//		{
//			name = Top Lens
//			transform = pb_SH_TopLens_obj
//			emissive = active
//			passiveColor = 0, 0, 0, 255
//			activeColor = COLOR_ASET_mpb_GREEN
//			variable = fc.Conditioned(fc.GetPersistentAsNumber("Global_Hud_Type") < 1)
//		}

//		TEXTURE_SHIFT
//		{
//			name = Top Lens
//			transform = pb_SH_TopLens_obj
//			startUV = 0, 0
//			endUV = 0, -0.5
//			layers = _Emissive
//			variable = fc.Conditioned(fc.GetPersistentAsNumber("Global_Hud_Type") < 1)
//			blend = true
//		}
	}
}
