PROP
{
	name = MAS_HUD_Drive_Display
  
 	MODEL
	{
		model = MOARdV/Props/HUD_Drive_Display/MAS_HUD_Drive_Display
	}

	MODULE
	{
		name = MASComponent

		MODEL_SCALE
		{
			name = Power on
			transform = ERSTripMonitor
			startScale = -1, -1, -1
			endScale = 0, 0, 0
			variable = fc.Conditioned(1) == 1 and fc.GetPersistentAsNumber("DriveDsiplay") == 1	//Global_Hud_Type
		}

 		ANIMATION
		{
			name = Speed Anim
			animation = ERSSpeedScaleAnim
			variable = fc.InverseLerp(fc.SurfaceForwardSpeed(), 0, 18)
		}

		ROTATION
		{
			name = Pitch
			transform = PitchStrelkaObj
			startRotation = 0, 90, 0
			endRotation = 0, -90, 0
			variable = fc.Pitch()
			range = -90, 90
			blend = true
			longPath = true
		}

		ROTATION
		{
			name = Roll
			transform = RollStrelkaObj
			startRotation = 0, 90, 0
			endRotation = 0, -90, 0
			variable = fc.Pitch()
			range = -90, 90
			blend = true
			longPath = true
		}

		ROTATION
		{
			name = Slope
			transform = SlopeStrelkaObj
			startRotation = 0, 0, 0
			endRotation = 0, -90, 0
			variable = fc.SlopeAngle()
			range = 0, 90
			blend = true
			longPath = true
		}
  
		ROTATION
		{
			name = Acceleration
			transform = AccellerationObj
			startRotation = 0, 0, 0
			endRotation = 0, 45, 0
			variable = fc.Acceleration()
			range = 0, 17
			blend = true
			longPath = true
		}
  
		ROTATION
		{
			name = Heading
			transform = DirectionScale
			startRotation = 0, 0, 0
			endRotation = 0, -359, 0
			variable = fc.Heading()
			range = 0, 359
			blend = true
			longPath = true
		}

		MODEL_SCALE
		{
			name = Target Beacon
			transform = TARGETANGLEDEVScaleObj
			startScale = -1, 0, 0
			endScale = 0, 0, 0
			variable = fc.InverseLerp(fc.TargetAngle(), 0, 180)
			blend = true
		}

		TRANSLATION
		{
			name = Forward Arrow
			transform = ForwardLamp
			startTranslation = 0, -0.01, 0
			endTranslation = 0, 0, 0
			variable = fc.Pitch() > 0.001
			blend = true
		}

		TRANSLATION
		{
			name = Backward Arrow
			transform = BackwardLamp
			startTranslation = 0, -0.01, 0
			endTranslation = 0, 0, 0
			variable = fc.Pitch() < -0.001
			blend = true
		}

		TRANSLATION
		{
			name = Neutral
			transform = NeutralLamp
			startTranslation = 0, -0.01, 0
			endTranslation = 0, 0, 0
			variable = fc.Pitch() > -0.001 and fc.Pitch() < 0.001
			blend = true
		}

		TRANSLATION
		{
			name = Reverse
			transform = RLamp
			startTranslation = 0, -0.01, 0
			endTranslation = 0, 0, 0
			variable = fc.SurfaceForwardSpeed() < -0.01
			blend = true
		}

		TRANSLATION
		{
			name = Brake
			transform = BrakesLamp
			startTranslation = 0, -0.01, 0
			endTranslation = 0, 0, 0
			variable = fc.GetBrakes()
			blend = true
		}

		TRANSLATION
		{
			name = SpeedIndicator
			transform = SpeedTabloPlate
			startTranslation = 0, -0.01, 0
			endTranslation = 0, 0, 0
			variable = fc.Conditioned(1)
			blend = true
		}

		TRANSLATION
		{
			name = SpeedIndicator
			transform = SpeedScaleGrp
			startTranslation = 0, -0.01, 0
			endTranslation = 0, 0, 0
			variable = fc.Conditioned(1)
			blend = true
		}

		TRANSLATION
		{
			name = Overspeed Indicator
			transform = SPEEDLamp
			startTranslation = 0, -0.01, 0
			endTranslation = 0, 0, 0
			variable = fc.SurfaceForwardSpeed() > 18
			blend = true
		}

		TRANSLATION
		{
			name = Skid Indicator
			transform = SKIDmarker
			startTranslation = 0.06, 0, 0
			endTranslation = -0.06, 0, 0
			variable = fc.InverseLerp(fc.Sideslip(), -3, 3)
			blend = true
		}

		TRANSLATION
		{
			name = Contact Indicator
			transform = GRNDContactLamp
			startTranslation = 0, -0.01, 0
			endTranslation = 0, 0, 0
			variable = fc.VesselLanded()
			blend = true
		}

		TRANSLATION
		{
			name = Target Indicator
			transform = TargetScreenPlate
			startTranslation = 0, -0.01, 0
			endTranslation = 0, 0, 0
			variable = fc.TargetIsVessel()
			blend = true
		}

		TEXT_LABEL
		{
			name = Speed Text
			transform = TabloSpeedText
			fontSize = 28.0
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, -0.01
			emissive = always
			passiveColor = 240, 255, 240, 255
			text = <=0:00.0=>$&$fc.SurfaceForwardSpeed()
		}

		TEXT_LABEL
		{
			name = Roll Text
			transform = RollText
			fontSize = 8.0
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 240, 255, 240, 255
			text = <=0:00.0=>$&$fc.Roll()
		}

		TEXT_LABEL
		{
			name = Pitch Text
			transform = PitchText
			fontSize = 8.0
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 240, 255, 240, 255
			text = <=0:00.0=>$&$fc.Pitch()
		}

		TEXT_LABEL
		{
			name = Heading Text
			transform = HEADINGText
			fontSize = 14.0
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 240, 255, 240, 255
			text = <=0:00.0=>$&$fc.Heading()
		}

		TEXT_LABEL
		{
			name = Slope Text
			transform = SlopeText
			fontSize = 8.0
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 240, 255, 240, 255
			text = <=0:00.0=>$&$fc.SlopeAngle()
		}

		TEXT_LABEL
		{
			name = Acceleration Text
			transform = ACCLText
			fontSize = 8.0
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 240, 255, 240, 255
			text = <=0:00.0=>$&$fc.Acceleration()
		}

		TEXT_LABEL
		{
			name = Distance Text
			transform = DistanceText
			fontSize = 8.0
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 240, 255, 240, 255
			text = <=0:SIP6.1=>m$&$fc.TargetDistance()
		}
	}
}
